name: Run Cypress Tests

# Controls when the action will run
on:
  push:
    branches:
      - master   # run on master branch push
  pull_request:
    branches:
      - master   # run on pull requests targeting master branch

# Define the jobs
jobs:
  cypress-run:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Adjust as needed

    strategy:
      matrix:
        browser: [chrome]  # Run tests in Chrome

    steps:
    # Step 1: Start Ubuntu and Install Dependencies
    - name: Set up Ubuntu environment
      run: sudo apt-get update && sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev build-essential xvfb

    # Step 2: Install Node.js
    - name: Setup Node.js
      uses: actions/checkout@v4
      uses: actions/setup-node@v4
      with:
        cache-dependency-path: ./package-lock.json
        node-version: '20'  # Specify the version of Node.js
        cache: 'npm'

    # Step 3: Install Cypress dependencies
    - name: Install Cypress dependencies
      run: |
        sudo apt-get install -y libnss3 libgconf-2-4
        sudo apt-get install -y google-chrome-stable
        npm install cypress

    # Step 4: Cache Node.js modules
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Step 5: Install project dependencies
    - name: Install Dependencies
      run: npm install

    # Step 6: Run Cypress Tests
    - name: Run Cypress Tests on ${{ matrix.browser }}
      run: npx cypress run --browser ${{ matrix.browser }}

    # Step 7: Upload test reports
    - name: Upload Cypress Report
      uses: actions/upload-artifact@v3
      with:
        name: cypress-report
        path: cypress/reports

    # Step 8: Save screenshots and videos
    - name: Upload Cypress Screenshots and Videos
      uses: actions/upload-artifact@v3
      with:
        name: cypress-artifacts
        path: cypress/screenshots,cypress/videos